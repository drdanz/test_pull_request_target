on:
  push:
  pull_request_target:
  pull_request:

jobs:

  select_environment:
    name: 'Prepare Environment'
    runs-on: ubuntu-20.04
    outputs:
      timestamp: ${{ steps.select.outputs.timestamp }}
      repository: ${{ steps.select.outputs.repository }}
      ref: ${{ steps.select.outputs.ref }}
      environment: ${{ steps.select.outputs.environment }}
      sha: ${{ steps.select.outputs.sha }}
      yarp_version: ${{ steps.select.outputs.yarp_version }}
    steps:
    - name: "Set output variables"
      id: select
      run: |
        echo "::set-output name=timestamp::$(/bin/date -u +%Y%m%d-%H%M%S)"

        if [[ "$GITHUB_EVENT_NAME" = "pull_request_target" ]]; then
          echo "::set-output name=environment::code-analysis_unsafe"
          echo "::set-output name=repository::${{ github.event.pull_request.head.repo.full_name }}"
          echo "::set-output name=ref::${{ github.event.pull_request.head.ref }}"
        else
          echo "::set-output name=repository::${{ github.repository }}"
          echo "::set-output name=ref::${{ github.ref }}"
          echo "::set-output name=environment::code-analysis"
        fi
        if [[ "$GITHUB_EVENT_NAME" = "pull_request" || "$GITHUB_EVENT_NAME" == "pull_request_target" ]]; then
          echo "::set-output name=sha::${{ github.event.pull_request.head.sha }}"
        else
          echo "::set-output name=sha::${{ github.sha }}"
        fi

        # Get YARP Project Version
        if [[ "$GITHUB_EVENT_NAME" = "release" ]]; then
          echo "::set-output name=yarp_version::$(awk '/ VERSION /{print $2}' CMakeLists.txt)"
        fi
    - name: 'Debug output variables'
      env:
        TIMESTAMP: ${{ steps.select.outputs.timestamp }}
        REPOSITORY: ${{ steps.select.outputs.repository }}
        REF: ${{ steps.select.outputs.ref }}
        ENVIRONMENT: ${{ steps.select.outputs.environment }}
        SHA: ${{ steps.select.outputs.sha }}
        YARP_VERSION: ${{ steps.select.outputs.yarp_version }}
      run: |
        echo "TIMESTAMP = ${TIMESTAMP}"
        echo "REPOSITORY = ${REPOSITORY}"
        echo "REF = ${REF}"
        echo "ENVIRONMENT = ${ENVIRONMENT}"
        echo "SHA = ${SHA}"
        echo "YARP_VERSION = ${YARP_VERSION}"


  print_info:
    name: 'Print useful information'
    needs: select_environment
    runs-on: ubuntu-20.04
    steps:

    - name: "Print Environment"
      run: |
        echo "::group::env"
        env
        echo "::endgroup::"

    - name: "Install tools"
      run: |
        sudo apt-get update -qq
        sudo apt-get install -qq -y jq

    - name: "Print event"
      run: |
        echo "::group::GITHUB_EVENT_PATH"
        cat $GITHUB_EVENT_PATH | jq -C
        echo "::endgroup::"

    - name: "Clone repository"
      uses: actions/checkout@v2
      with:
        repository: ${{ needs.select_environment.outputs.repository }}
        ref: ${{ needs.select_environment.outputs.ref }}

    - name: "Print needs.select_environment.outputs.ref"
      run: |
        echo "::group::needs.select_environment.outputs.ref"
        echo ${{ needs.select_environment.outputs.ref }}
        echo "::endgroup::"

        echo "::group::git show needs.select_environment.outputs.ref"
        git show ${{ needs.select_environment.outputs.ref }}
        echo "::endgroup::"

    - name: "Print needs.select_environment.outputs.sha"
      run: |
        echo "::group::git show needs.select_environment.outputs.sha"
        git show ${{ needs.select_environment.outputs.sha }}
        echo "::endgroup::"
